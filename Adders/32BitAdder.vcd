$date
	Wed Aug 28 19:56:05 2019
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module top $end
$var wire 32 ! sum [31:0] $end
$var wire 1 " Cout $end
$var reg 32 # A [31:0] $end
$var reg 32 $ B [31:0] $end
$var reg 1 % Cin $end
$scope module F0 $end
$var wire 32 & A [31:0] $end
$var wire 32 ' B [31:0] $end
$var wire 1 % Cin $end
$var wire 32 ( Sum [31:0] $end
$var wire 1 " Cout $end
$var wire 1 ) C1 $end
$scope module f1 $end
$var wire 16 * A [15:0] $end
$var wire 16 + B [15:0] $end
$var wire 1 % Cin $end
$var wire 16 , Sum [15:0] $end
$var wire 1 ) Cout $end
$var wire 1 - C1 $end
$scope module f1 $end
$var wire 8 . A [7:0] $end
$var wire 8 / B [7:0] $end
$var wire 1 % Cin $end
$var wire 8 0 Sum [7:0] $end
$var wire 1 - Cout $end
$var wire 1 1 C1 $end
$scope module f1 $end
$var wire 4 2 A [3:0] $end
$var wire 4 3 B [3:0] $end
$var wire 1 % Cin $end
$var wire 4 4 sum [3:0] $end
$var wire 1 1 carry $end
$var wire 1 5 C3 $end
$var wire 1 6 C2 $end
$var wire 1 7 C1 $end
$scope module FA_0 $end
$var wire 1 8 A $end
$var wire 1 9 B $end
$var wire 1 % C $end
$var wire 1 7 carry $end
$var wire 1 : sum $end
$upscope $end
$scope module FA_1 $end
$var wire 1 ; A $end
$var wire 1 < B $end
$var wire 1 7 C $end
$var wire 1 6 carry $end
$var wire 1 = sum $end
$upscope $end
$scope module FA_2 $end
$var wire 1 > A $end
$var wire 1 ? B $end
$var wire 1 6 C $end
$var wire 1 5 carry $end
$var wire 1 @ sum $end
$upscope $end
$scope module FA_3 $end
$var wire 1 A A $end
$var wire 1 B B $end
$var wire 1 5 C $end
$var wire 1 1 carry $end
$var wire 1 C sum $end
$upscope $end
$upscope $end
$scope module f2 $end
$var wire 4 D A [3:0] $end
$var wire 4 E B [3:0] $end
$var wire 1 1 Cin $end
$var wire 4 F sum [3:0] $end
$var wire 1 - carry $end
$var wire 1 G C3 $end
$var wire 1 H C2 $end
$var wire 1 I C1 $end
$scope module FA_0 $end
$var wire 1 J A $end
$var wire 1 K B $end
$var wire 1 1 C $end
$var wire 1 I carry $end
$var wire 1 L sum $end
$upscope $end
$scope module FA_1 $end
$var wire 1 M A $end
$var wire 1 N B $end
$var wire 1 I C $end
$var wire 1 H carry $end
$var wire 1 O sum $end
$upscope $end
$scope module FA_2 $end
$var wire 1 P A $end
$var wire 1 Q B $end
$var wire 1 H C $end
$var wire 1 G carry $end
$var wire 1 R sum $end
$upscope $end
$scope module FA_3 $end
$var wire 1 S A $end
$var wire 1 T B $end
$var wire 1 G C $end
$var wire 1 - carry $end
$var wire 1 U sum $end
$upscope $end
$upscope $end
$upscope $end
$scope module f2 $end
$var wire 8 V A [7:0] $end
$var wire 8 W B [7:0] $end
$var wire 1 - Cin $end
$var wire 8 X Sum [7:0] $end
$var wire 1 ) Cout $end
$var wire 1 Y C1 $end
$scope module f1 $end
$var wire 4 Z A [3:0] $end
$var wire 4 [ B [3:0] $end
$var wire 1 - Cin $end
$var wire 4 \ sum [3:0] $end
$var wire 1 Y carry $end
$var wire 1 ] C3 $end
$var wire 1 ^ C2 $end
$var wire 1 _ C1 $end
$scope module FA_0 $end
$var wire 1 ` A $end
$var wire 1 a B $end
$var wire 1 - C $end
$var wire 1 _ carry $end
$var wire 1 b sum $end
$upscope $end
$scope module FA_1 $end
$var wire 1 c A $end
$var wire 1 d B $end
$var wire 1 _ C $end
$var wire 1 ^ carry $end
$var wire 1 e sum $end
$upscope $end
$scope module FA_2 $end
$var wire 1 f A $end
$var wire 1 g B $end
$var wire 1 ^ C $end
$var wire 1 ] carry $end
$var wire 1 h sum $end
$upscope $end
$scope module FA_3 $end
$var wire 1 i A $end
$var wire 1 j B $end
$var wire 1 ] C $end
$var wire 1 Y carry $end
$var wire 1 k sum $end
$upscope $end
$upscope $end
$scope module f2 $end
$var wire 4 l A [3:0] $end
$var wire 4 m B [3:0] $end
$var wire 1 Y Cin $end
$var wire 4 n sum [3:0] $end
$var wire 1 ) carry $end
$var wire 1 o C3 $end
$var wire 1 p C2 $end
$var wire 1 q C1 $end
$scope module FA_0 $end
$var wire 1 r A $end
$var wire 1 s B $end
$var wire 1 Y C $end
$var wire 1 q carry $end
$var wire 1 t sum $end
$upscope $end
$scope module FA_1 $end
$var wire 1 u A $end
$var wire 1 v B $end
$var wire 1 q C $end
$var wire 1 p carry $end
$var wire 1 w sum $end
$upscope $end
$scope module FA_2 $end
$var wire 1 x A $end
$var wire 1 y B $end
$var wire 1 p C $end
$var wire 1 o carry $end
$var wire 1 z sum $end
$upscope $end
$scope module FA_3 $end
$var wire 1 { A $end
$var wire 1 | B $end
$var wire 1 o C $end
$var wire 1 ) carry $end
$var wire 1 } sum $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module f2 $end
$var wire 16 ~ A [15:0] $end
$var wire 16 !" B [15:0] $end
$var wire 1 ) Cin $end
$var wire 16 "" Sum [15:0] $end
$var wire 1 " Cout $end
$var wire 1 #" C1 $end
$scope module f1 $end
$var wire 8 $" A [7:0] $end
$var wire 8 %" B [7:0] $end
$var wire 1 ) Cin $end
$var wire 8 &" Sum [7:0] $end
$var wire 1 #" Cout $end
$var wire 1 '" C1 $end
$scope module f1 $end
$var wire 4 (" A [3:0] $end
$var wire 4 )" B [3:0] $end
$var wire 1 ) Cin $end
$var wire 4 *" sum [3:0] $end
$var wire 1 '" carry $end
$var wire 1 +" C3 $end
$var wire 1 ," C2 $end
$var wire 1 -" C1 $end
$scope module FA_0 $end
$var wire 1 ." A $end
$var wire 1 /" B $end
$var wire 1 ) C $end
$var wire 1 -" carry $end
$var wire 1 0" sum $end
$upscope $end
$scope module FA_1 $end
$var wire 1 1" A $end
$var wire 1 2" B $end
$var wire 1 -" C $end
$var wire 1 ," carry $end
$var wire 1 3" sum $end
$upscope $end
$scope module FA_2 $end
$var wire 1 4" A $end
$var wire 1 5" B $end
$var wire 1 ," C $end
$var wire 1 +" carry $end
$var wire 1 6" sum $end
$upscope $end
$scope module FA_3 $end
$var wire 1 7" A $end
$var wire 1 8" B $end
$var wire 1 +" C $end
$var wire 1 '" carry $end
$var wire 1 9" sum $end
$upscope $end
$upscope $end
$scope module f2 $end
$var wire 4 :" A [3:0] $end
$var wire 4 ;" B [3:0] $end
$var wire 1 '" Cin $end
$var wire 4 <" sum [3:0] $end
$var wire 1 #" carry $end
$var wire 1 =" C3 $end
$var wire 1 >" C2 $end
$var wire 1 ?" C1 $end
$scope module FA_0 $end
$var wire 1 @" A $end
$var wire 1 A" B $end
$var wire 1 '" C $end
$var wire 1 ?" carry $end
$var wire 1 B" sum $end
$upscope $end
$scope module FA_1 $end
$var wire 1 C" A $end
$var wire 1 D" B $end
$var wire 1 ?" C $end
$var wire 1 >" carry $end
$var wire 1 E" sum $end
$upscope $end
$scope module FA_2 $end
$var wire 1 F" A $end
$var wire 1 G" B $end
$var wire 1 >" C $end
$var wire 1 =" carry $end
$var wire 1 H" sum $end
$upscope $end
$scope module FA_3 $end
$var wire 1 I" A $end
$var wire 1 J" B $end
$var wire 1 =" C $end
$var wire 1 #" carry $end
$var wire 1 K" sum $end
$upscope $end
$upscope $end
$upscope $end
$scope module f2 $end
$var wire 8 L" A [7:0] $end
$var wire 8 M" B [7:0] $end
$var wire 1 #" Cin $end
$var wire 8 N" Sum [7:0] $end
$var wire 1 " Cout $end
$var wire 1 O" C1 $end
$scope module f1 $end
$var wire 4 P" A [3:0] $end
$var wire 4 Q" B [3:0] $end
$var wire 1 #" Cin $end
$var wire 4 R" sum [3:0] $end
$var wire 1 O" carry $end
$var wire 1 S" C3 $end
$var wire 1 T" C2 $end
$var wire 1 U" C1 $end
$scope module FA_0 $end
$var wire 1 V" A $end
$var wire 1 W" B $end
$var wire 1 #" C $end
$var wire 1 U" carry $end
$var wire 1 X" sum $end
$upscope $end
$scope module FA_1 $end
$var wire 1 Y" A $end
$var wire 1 Z" B $end
$var wire 1 U" C $end
$var wire 1 T" carry $end
$var wire 1 [" sum $end
$upscope $end
$scope module FA_2 $end
$var wire 1 \" A $end
$var wire 1 ]" B $end
$var wire 1 T" C $end
$var wire 1 S" carry $end
$var wire 1 ^" sum $end
$upscope $end
$scope module FA_3 $end
$var wire 1 _" A $end
$var wire 1 `" B $end
$var wire 1 S" C $end
$var wire 1 O" carry $end
$var wire 1 a" sum $end
$upscope $end
$upscope $end
$scope module f2 $end
$var wire 4 b" A [3:0] $end
$var wire 4 c" B [3:0] $end
$var wire 1 O" Cin $end
$var wire 4 d" sum [3:0] $end
$var wire 1 " carry $end
$var wire 1 e" C3 $end
$var wire 1 f" C2 $end
$var wire 1 g" C1 $end
$scope module FA_0 $end
$var wire 1 h" A $end
$var wire 1 i" B $end
$var wire 1 O" C $end
$var wire 1 g" carry $end
$var wire 1 j" sum $end
$upscope $end
$scope module FA_1 $end
$var wire 1 k" A $end
$var wire 1 l" B $end
$var wire 1 g" C $end
$var wire 1 f" carry $end
$var wire 1 m" sum $end
$upscope $end
$scope module FA_2 $end
$var wire 1 n" A $end
$var wire 1 o" B $end
$var wire 1 f" C $end
$var wire 1 e" carry $end
$var wire 1 p" sum $end
$upscope $end
$scope module FA_3 $end
$var wire 1 q" A $end
$var wire 1 r" B $end
$var wire 1 e" C $end
$var wire 1 " carry $end
$var wire 1 s" sum $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0s"
0r"
0q"
0p"
0o"
0n"
0m"
0l"
0k"
1j"
0i"
1h"
0g"
0f"
0e"
b1 d"
b0 c"
b1 b"
0a"
0`"
0_"
0^"
0]"
0\"
1["
0Z"
1Y"
0X"
0W"
0V"
0U"
0T"
0S"
b10 R"
b0 Q"
b10 P"
0O"
b10010 N"
b0 M"
b10010 L"
0K"
0J"
0I"
0H"
0G"
0F"
0E"
0D"
0C"
1B"
0A"
1@"
0?"
0>"
0="
b1 <"
b0 ;"
b1 :"
09"
08"
07"
16"
05"
14"
03"
02"
01"
10"
0/"
1."
0-"
0,"
0+"
b101 *"
b0 )"
b101 ("
0'"
b10101 &"
b0 %"
b10101 $"
0#"
b1001000010101 ""
b0 !"
b1001000010101 ~
0}
0|
0{
0z
0y
0x
1w
0v
1u
1t
0s
1r
0q
0p
0o
b11 n
b0 m
b11 l
0k
0j
0i
1h
0g
1f
0e
0d
0c
1b
0a
1`
0_
0^
0]
b101 \
b0 [
b101 Z
0Y
b110101 X
b0 W
b110101 V
1U
0T
0S
0R
1Q
0P
0O
1N
1M
0L
0K
0J
0I
1H
1G
b1000 F
b110 E
b10 D
0C
0B
0A
1@
0?
1>
0=
0<
0;
1:
19
08
07
06
05
b101 4
b1 3
b100 2
01
b10000101 0
b1100001 /
b100100 .
0-
b11010110000101 ,
b1100001 +
b11010100100100 *
0)
b10010000101010011010110000101 (
b1100001 '
b10010000101010011010100100100 &
0%
b1100001 $
b10010000101010011010100100100 #
0"
b10010000101010011010110000101 !
$end
#10
0U
0G
0H
0:
b0 F
0R
b0 0
b0 4
0@
0b
b0 \
0h
0t
b0 ,
b0 X
b0 n
0w
00"
b0 *"
06"
b0 &"
b0 <"
0B"
b0 R"
0["
b0 !
b0 (
b0 ""
b0 N"
b0 d"
0j"
09
0N
0Q
0>
0M
0`
0f
0r
0u
0."
04"
0@"
0Y"
0h"
b0 3
b0 E
b0 2
b0 D
b0 Z
b0 l
b0 ("
b0 :"
b0 P"
b0 b"
b0 /
b0 .
b0 V
b0 $"
b0 L"
b0 +
b0 *
b0 ~
b0 $
b0 '
b0 #
b0 &
#20
1p"
1j"
b1110000000000000000000000000000 !
b1110000000000000000000000000000 (
b111000000000000 ""
b1110000 N"
b111 d"
1m"
1o"
1h"
1k"
b100 c"
b11 b"
b1000000 M"
b110000 L"
b100000000000000 !"
b11000000000000 ~
b1000000000000000000000000000000 $
b1000000000000000000000000000000 '
b110000000000000000000000000000 #
b110000000000000000000000000000 &
#30
1g"
0j"
1O"
1S"
19"
1s"
1f"
1+"
1T"
1e"
b1010 *"
13"
0^"
1m"
b11010 &"
b1 <"
1B"
b0 R"
0a"
b1110000000011010 ""
b11100000 N"
b1110 d"
1p"
12"
15"
1Z"
1]"
1l"
14"
1@"
1Y"
1_"
1n"
b110 )"
b110 Q"
b110 c"
b100 ("
b1 :"
b1010 P"
b111 b"
b110 %"
b1100110 M"
b10100 $"
b1111010 L"
b11100000000110100000000000000001 !
b11100000000110100000000000000001 (
b1 ,
b1 0
b1 4
1:
b110011000000110 !"
b111101000010100 ~
1%
b1100110000001100000000000000000 $
b1100110000001100000000000000000 '
b1111010000101000000000000000000 #
b1111010000101000000000000000000 &
#40
1E"
1@
1C
1L
1O
1R
b1111 F
1U
1b
1e
1h
b1111 \
1k
1t
1w
1z
b11111111 X
b1111 n
1}
10"
16"
1H"
b1111 <"
1K"
1X"
1["
1?"
b1111111111111111 ,
b11111111 0
b1111 4
1=
16
15
11
1I
1H
1G
1-
1_
1^
1]
1Y
1q
1p
1o
1)
1-"
1,"
1>"
1="
1#"
1U"
1a"
b1111 d"
1j"
17
b11111111 &"
b1111 *"
13"
1'"
b11111111111111111111111111111111 !
b11111111111111111111111111111111 (
b1111111111111111 ""
b11111111 N"
b1111 R"
1^"
1"
19
1<
1?
1B
1K
1N
1Q
1T
1a
1d
1g
1j
1s
1v
1y
1|
1/"
18"
1A"
1D"
1G"
1J"
1W"
1`"
1i"
1r"
18
1;
1>
1A
1J
1M
1P
1S
1`
1c
1f
1i
1r
1u
1x
1{
1."
11"
17"
1C"
1F"
1I"
1V"
1\"
1q"
b1111 3
b1111 E
b1111 [
b1111 m
b1111 )"
b1111 ;"
b1111 Q"
b1111 c"
b1111 2
b1111 D
b1111 Z
b1111 l
b1111 ("
b1111 :"
b1111 P"
b1111 b"
b11111111 /
b11111111 W
b11111111 %"
b11111111 M"
b11111111 .
b11111111 V
b11111111 $"
b11111111 L"
b1111111111111111 +
b1111111111111111 !"
b1111111111111111 *
b1111111111111111 ~
b11111111111111111111111111111111 $
b11111111111111111111111111111111 '
b11111111111111111111111111111111 #
b11111111111111111111111111111111 &
