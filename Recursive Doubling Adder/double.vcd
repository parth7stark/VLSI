$date
	Wed Aug 28 19:58:20 2019
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module top $end
$var wire 17 ! sum [16:0] $end
$var reg 16 " a [15:0] $end
$var reg 16 # b [15:0] $end
$var reg 1 $ cin $end
$scope module d $end
$var wire 16 % A [15:0] $end
$var wire 16 & B [15:0] $end
$var wire 1 $ cin $end
$var wire 17 ' sum [16:0] $end
$var wire 17 ( b5 [16:0] $end
$var wire 17 ) b4 [16:0] $end
$var wire 17 * b3 [16:0] $end
$var wire 17 + b2 [16:0] $end
$var wire 17 , b1 [16:0] $end
$var wire 17 - b0 [16:0] $end
$var wire 17 . a5 [16:0] $end
$var wire 17 / a4 [16:0] $end
$var wire 17 0 a3 [16:0] $end
$var wire 17 1 a2 [16:0] $end
$var wire 17 2 a1 [16:0] $end
$var wire 17 3 a0 [16:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b111001000010 3
b1111001000010 2
b11111001000010 1
b11111001000010 0
b11111001000010 /
b11111001000010 .
b1011111101110010 -
b11111001100010 ,
b11111001000010 +
b11111001000010 *
b11111001000010 )
b11111001000010 (
b110011011011010 '
b1111110100001 &
b100011100111001 %
0$
b1111110100001 #
b100011100111001 "
b110011011011010 !
$end
#5
b11111111111110000 .
b11111111111110000 (
b11111111111110000 /
b11111111111110000 )
b111111110000 0
b11111111111110000 *
b1111110000 1
b11111111111110000 +
b11110000 2
b11111111111111100 ,
b10000000000110111 !
b10000000000110111 '
b1110000 3
b11111111111111110 -
b111000 #
b111000 &
b1111111111111111 "
b1111111111111111 %
#10
b0 .
b0 (
b0 /
b0 )
b0 0
b0 *
b0 1
b0 +
b0 2
b0 ,
b0 !
b0 '
b0 3
b0 -
b0 #
b0 &
b0 "
b0 %
#15
b100000 ,
b1001011000 !
b1001011000 '
b10010110000 -
b1001011000 "
b1001011000 %
#20
b10000000000 .
b10000000000 (
b10000000000 /
b10000000000 )
b10000000000 0
b10000000000 *
b10000000000 1
b10011110000 +
b10000000000 2
b10011111100 ,
b10101111111 !
b10101111111 '
b11011111110 -
b10000000000 3
b1100100111 #
b1100100111 &
#25
b1111 .
b1111 (
b1111 /
b1111 )
b1111 0
b1111 *
b11100101001 !
b11100101001 '
b1111 1
b1111 +
b111 2
b110000001111 ,
b11 3
b111001001111 -
1$
b10000000001 "
b10000000001 %
